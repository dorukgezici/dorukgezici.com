<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Doruk Gezici on Medium]]></title>
        <description><![CDATA[Stories by Doruk Gezici on Medium]]></description>
        <link>https://medium.com/@dorukgezici?source=rss-1a8741680cbd------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*c_ACGkoAGQtdxJWNLG-GnA.jpeg</url>
            <title>Stories by Doruk Gezici on Medium</title>
            <link>https://medium.com/@dorukgezici?source=rss-1a8741680cbd------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Mon, 10 Jul 2023 15:06:34 GMT</lastBuildDate>
        <atom:link href="https://medium.com/@dorukgezici/feed" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[How to Setup Python Flask App on Shared Hosting without Sudo]]></title>
            <link>https://dorukgezici.medium.com/how-to-setup-python-flask-app-on-shared-hosting-without-root-access-e40f95ccc819?source=rss-1a8741680cbd------2</link>
            <guid isPermaLink="false">https://medium.com/p/e40f95ccc819</guid>
            <category><![CDATA[linux]]></category>
            <category><![CDATA[flask]]></category>
            <category><![CDATA[servers]]></category>
            <category><![CDATA[web-development]]></category>
            <category><![CDATA[python]]></category>
            <dc:creator><![CDATA[Doruk Gezici]]></dc:creator>
            <pubDate>Fri, 26 May 2017 20:59:12 GMT</pubDate>
            <atom:updated>2019-05-18T18:31:22.127Z</atom:updated>
            <content:encoded><![CDATA[<p>As you might have noticed many shared hosting servers actually have python installed, but configuring the server to create a python web app using a framework and a template engine (like Flask and Jinja2) can become a nightmare since shared hosting accounts don’t have root access.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*_zWDUHb6fgT-qIdF4G35HA.jpeg" /><figcaption>I ❤ Linux</figcaption></figure><p>Lets start by telling what you need to actually setup Flask.</p><h3>Requirements</h3><p>— — SSH Access to your Web Server<br> — — Python installed on your web server (Mine had version 2.6)<br> — — To deploy your Flask App, you need one of these (mod_wsgi, uWSGI, FastCGI and CGI) available on your server. My server had only CGI support, so I will be explaining that one.</p><p>That’s it! Notice that the below will be needed but we will manage to install them without root access.<br> — — Pip (Python Package Manager)<br> — — Flask Library and its dependencies</p><h3>Installation</h3><p>Once you are connected to your server using ssh, you will download a bootstrapping script to install pip without root access. “cd” into your home directory, then enter:</p><pre>wget <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a><br>python get-pip.py --user</pre><p>We are installing pip to ~/.local/bin by using — user prefix. This way we don’t need root access.</p><p>After you installed pip, you will need to add ~/.local/bin to your executables path. Run:</p><pre>export PATH=$PATH:~/.local/bin</pre><p>Or if you don’t want to do this every time you need to use pip, you can create a file named “.bash_profile” in your home directory and put the code above in the file.</p><p>Now you have pip and you can access it just by calling it in your terminal! As the next step, we will install Flask and its dependencies by running:</p><pre>pip install --user flask</pre><p>Now you have everything you need to run Flask. I will also give a simple Flask app example, but if you want to improve yourself I recommend reading the documentations for <a href="http://flask.pocoo.org/docs/0.12/">Flask</a> and <a href="http://jinja.pocoo.org/docs/2.9/templates/">Jinja2</a>.</p><p>First, create your Flask application, save this file as ‘myapp.py’ in your public_html folder:</p><pre>from flask import Flask, render_template<br>app = Flask(__name__)</pre><pre>@app.route(&#39;/&#39;)<br>def home():<br>  return render_template(&#39;home.html&#39;)</pre><pre>if __name__ == &#39;__main__&#39;:<br>  app.run()</pre><p>I will also show 2 basic template files to give you and idea about Python template engine Jinja2. You need to create a folder called ‘templates’ (name is important) in your public_html folder. Save this one as ‘home.html’ in that folder:</p><pre>{% extends &quot;layout.html&quot; %}<br>{% block content %}<br>  &lt;div&gt;<br>    &lt;h1&gt;Python 2.6 Web Server&lt;/h1&gt;<br>    &lt;h2&gt;Using Flask and Jinja2&lt;/h2&gt;<br>  &lt;/div&gt;<br>{% endblock %}</pre><p>And this one as ‘layout.html’ in the templates folder:</p><pre>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;meta charset=&quot;utf-8&quot;&gt;<br>    &lt;title&gt;{% block title %}DGtech — Flask App{% endblock %}&lt;/title&gt;<br>    {% block head %}<br>    {% endblock %}<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    {% block content %}{% endblock %}<br>  &lt;/body&gt;<br>&lt;/html&gt;</pre><p>Now we will create a .cgi file. Since my server has only CGI support, I will use CGI to deploy my Flask App. You need to replace &lt;YOUR PATH&gt; with the full path of your python site-packages folder. It is something like ‘xxx/.local/lib/python2.6/site-packages’. Save this file as ‘main.cgi’ in your public_html folder:</p><pre>#!/usr/bin/python<br>import sys<br>sys.path.insert(0, &#39;&lt;YOUR PATH&gt;&#39;)</pre><pre>from wsgiref.handlers import CGIHandler<br>from myapp import app<br>CGIHandler().run(app)</pre><p>Now to the last part! We need to create or edit the .htaccess file. You are going to need to replace the full path of your main.cgi file with &lt;YOUR PATH&gt;. ‘/$1 [L]’ needs to stay. It is something like ‘/xxx/public_html/main.cgi’:</p><pre>RewriteEngine On<br>RewriteCond %{REQUEST_FILENAME} !-f<br>RewriteRule ^(.*)$ &lt;YOUR PATH&gt;/$1 [L]</pre><p>Voula! Try to go to your domain and see for yourself. One quick tip, if you get an internal error 500 it is probably about your python code. If you get error 404 your .htaccess might not be working properly.</p><p>Happy Hacking!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e40f95ccc819" width="1" height="1" alt="">]]></content:encoded>
        </item>
    </channel>
</rss>